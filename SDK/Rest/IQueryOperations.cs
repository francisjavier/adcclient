// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataCatalog.Rest
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// QueryOperations operations.
    /// </summary>
    public partial interface IQueryOperations
    {
        /// <summary>
        /// Register Query
        /// </summary>
        /// <param name='query'>
        /// Register Query
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryRegisterHeaders>> RegisterWithHttpMessagesAsync(Query query, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Query
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<QueryGet,QueryGetHeaders>> GetWithHttpMessagesAsync(string viewItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Query
        /// </summary>
        /// <param name='viewItemId'>
        /// View item id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteHeaders>> DeleteWithHttpMessagesAsync(string viewItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='description'>
        /// description payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddDescriptionHeaders>> AddDescriptionWithHttpMessagesAsync(string viewItemId, Description description, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='expert'>
        /// expert payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddExpertHeaders>> AddExpertWithHttpMessagesAsync(string viewItemId, Expert expert, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='accessInstruction'>
        /// accessinstruction payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddAccessInstructionHeaders>> AddAccessInstructionWithHttpMessagesAsync(string viewItemId, AccessInstruction accessInstruction, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='documentation'>
        /// documentation payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddDocumentationHeaders>> AddDocumentationWithHttpMessagesAsync(string viewItemId, Documentation documentation, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='friendlyName'>
        /// friendlyname payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddFriendlyNameHeaders>> AddFriendlyNameWithHttpMessagesAsync(string viewItemId, FriendlyName friendlyName, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='tag'>
        /// tag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddTagHeaders>> AddTagWithHttpMessagesAsync(string viewItemId, Tag tag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='termTag'>
        /// termtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddTermTagHeaders>> AddTermTagWithHttpMessagesAsync(string viewItemId, TermTag termTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='schema'>
        /// schema payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddSchemaHeaders>> AddSchemaWithHttpMessagesAsync(string viewItemId, Schema schema, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Preview
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='preview'>
        /// preview payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddPreviewHeaders>> AddPreviewWithHttpMessagesAsync(string viewItemId, Preview preview, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add TableDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='tableDataProfile'>
        /// tabledataprofile payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddTableDataProfileHeaders>> AddTableDataProfileWithHttpMessagesAsync(string viewItemId, TableDataProfile tableDataProfile, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ColumnsDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='columnsDataProfile'>
        /// columnsdataprofile payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddColumnsDataProfileHeaders>> AddColumnsDataProfileWithHttpMessagesAsync(string viewItemId, ColumnsDataProfile columnsDataProfile, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='columnDescription'>
        /// columndescription payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddColumnDescriptionHeaders>> AddColumnDescriptionWithHttpMessagesAsync(string viewItemId, ColumnDescription columnDescription, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='columnTag'>
        /// columntag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddColumnTagHeaders>> AddColumnTagWithHttpMessagesAsync(string viewItemId, ColumnTag columnTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='columnTermTag'>
        /// columntermtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddColumnTermTagHeaders>> AddColumnTermTagWithHttpMessagesAsync(string viewItemId, ColumnTermTag columnTermTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Power
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='powerQuery'>
        /// powerquery payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryAddPowerHeaders>> AddPowerWithHttpMessagesAsync(string viewItemId, PowerQuery powerQuery, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='description'>
        /// description payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateDescriptionHeaders>> UpdateDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Description description, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DescriptionGet,QueryGetDescriptionHeaders>> GetDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteDescriptionHeaders>> DeleteDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='expert'>
        /// expert payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateExpertHeaders>> UpdateExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Expert expert, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ExpertGet,QueryGetExpertHeaders>> GetExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteExpertHeaders>> DeleteExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='accessInstruction'>
        /// accessinstruction payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateAccessInstructionHeaders>> UpdateAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, AccessInstruction accessInstruction, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<AccessInstructionGet,QueryGetAccessInstructionHeaders>> GetAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteAccessInstructionHeaders>> DeleteAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='documentation'>
        /// documentation payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateDocumentationHeaders>> UpdateDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Documentation documentation, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DocumentationGet,QueryGetDocumentationHeaders>> GetDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteDocumentationHeaders>> DeleteDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='friendlyName'>
        /// friendlyname payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateFriendlyNameHeaders>> UpdateFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, FriendlyName friendlyName, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<FriendlyNameGet,QueryGetFriendlyNameHeaders>> GetFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteFriendlyNameHeaders>> DeleteFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='tag'>
        /// tag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateTagHeaders>> UpdateTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Tag tag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<TagGet,QueryGetTagHeaders>> GetTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteTagHeaders>> DeleteTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='termTag'>
        /// termtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateTermTagHeaders>> UpdateTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, TermTag termTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<TermTagGet,QueryGetTermTagHeaders>> GetTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteTermTagHeaders>> DeleteTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='schema'>
        /// schema payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateSchemaHeaders>> UpdateSchemaWithHttpMessagesAsync(string viewItemId, string annotationItemId, Schema schema, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<SchemaGet,QueryGetSchemaHeaders>> GetSchemaWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteSchemaHeaders>> DeleteSchemaWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Preview
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='preview'>
        /// preview payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdatePreviewHeaders>> UpdatePreviewWithHttpMessagesAsync(string viewItemId, string annotationItemId, Preview preview, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Preview
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<PreviewGet,QueryGetPreviewHeaders>> GetPreviewWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Preview
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeletePreviewHeaders>> DeletePreviewWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update TableDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='tableDataProfile'>
        /// tabledataprofile payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateTableDataProfileHeaders>> UpdateTableDataProfileWithHttpMessagesAsync(string viewItemId, string annotationItemId, TableDataProfile tableDataProfile, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get TableDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<TableDataProfileGet,QueryGetTableDataProfileHeaders>> GetTableDataProfileWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete TableDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteTableDataProfileHeaders>> DeleteTableDataProfileWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ColumnsDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='columnsDataProfile'>
        /// columnsdataprofile payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateColumnsDataProfileHeaders>> UpdateColumnsDataProfileWithHttpMessagesAsync(string viewItemId, string annotationItemId, ColumnsDataProfile columnsDataProfile, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ColumnsDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ColumnsDataProfileGet,QueryGetColumnsDataProfileHeaders>> GetColumnsDataProfileWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ColumnsDataProfile
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteColumnsDataProfileHeaders>> DeleteColumnsDataProfileWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='columnDescription'>
        /// columndescription payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateColumnDescriptionHeaders>> UpdateColumnDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, ColumnDescription columnDescription, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ColumnDescriptionGet,QueryGetColumnDescriptionHeaders>> GetColumnDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteColumnDescriptionHeaders>> DeleteColumnDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='columnTag'>
        /// columntag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateColumnTagHeaders>> UpdateColumnTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, ColumnTag columnTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ColumnTagGet,QueryGetColumnTagHeaders>> GetColumnTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteColumnTagHeaders>> DeleteColumnTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='columnTermTag'>
        /// columntermtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdateColumnTermTagHeaders>> UpdateColumnTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, ColumnTermTag columnTermTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ColumnTermTagGet,QueryGetColumnTermTagHeaders>> GetColumnTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeleteColumnTermTagHeaders>> DeleteColumnTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Power
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='powerQuery'>
        /// powerquery payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryUpdatePowerHeaders>> UpdatePowerWithHttpMessagesAsync(string viewItemId, string annotationItemId, PowerQuery powerQuery, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Power
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<PowerQueryGet,QueryGetPowerHeaders>> GetPowerWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Power
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<QueryDeletePowerHeaders>> DeletePowerWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}

// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataCatalog.Rest.Models
{
    using System.Linq;

    /// <summary>
    /// Office telemtry rules
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class OfficeTelemetryRule
    {
        /// <summary>
        /// Initializes a new instance of the OfficeTelemetryRule class.
        /// </summary>
        public OfficeTelemetryRule() { }

        /// <summary>
        /// Initializes a new instance of the OfficeTelemetryRule class.
        /// </summary>
        /// <param name="fromSourceSystem">fromSourceSystem property</param>
        /// <param name="apps">apps property</param>
        /// <param name="platforms">platforms property</param>
        /// <param name="builds">builds property</param>
        /// <param name="flights">flights property</param>
        /// <param name="ruleReference">ruleReference property</param>
        /// <param name="ruleHealthReportDogfood">ruleHealthReportDogfood
        /// property</param>
        /// <param
        /// name="ruleHealthReportProduction">ruleHealthReportProduction property</param>
        /// <param name="splunkLink">splunkLink property</param>
        public OfficeTelemetryRule(bool fromSourceSystem, System.Collections.Generic.IList<string> apps = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> platforms = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> builds = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> flights = default(System.Collections.Generic.IList<string>), string ruleReference = default(string), string ruleHealthReportDogfood = default(string), string ruleHealthReportProduction = default(string), string splunkLink = default(string), System.Collections.Generic.IList<RolesItem> roles = default(System.Collections.Generic.IList<RolesItem>))
        {
            Apps = apps;
            Platforms = platforms;
            Builds = builds;
            Flights = flights;
            RuleReference = ruleReference;
            RuleHealthReportDogfood = ruleHealthReportDogfood;
            RuleHealthReportProduction = ruleHealthReportProduction;
            SplunkLink = splunkLink;
            FromSourceSystem = fromSourceSystem;
            Roles = roles;
        }

        /// <summary>
        /// Gets or sets apps property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.apps")]
        public System.Collections.Generic.IList<string> Apps { get; set; }

        /// <summary>
        /// Gets or sets platforms property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.platforms")]
        public System.Collections.Generic.IList<string> Platforms { get; set; }

        /// <summary>
        /// Gets or sets builds property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.builds")]
        public System.Collections.Generic.IList<string> Builds { get; set; }

        /// <summary>
        /// Gets or sets flights property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.flights")]
        public System.Collections.Generic.IList<string> Flights { get; set; }

        /// <summary>
        /// Gets or sets ruleReference property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ruleReference")]
        public string RuleReference { get; set; }

        /// <summary>
        /// Gets or sets ruleHealthReportDogfood property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ruleHealthReportDogfood")]
        public string RuleHealthReportDogfood { get; set; }

        /// <summary>
        /// Gets or sets ruleHealthReportProduction property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ruleHealthReportProduction")]
        public string RuleHealthReportProduction { get; set; }

        /// <summary>
        /// Gets or sets splunkLink property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.splunkLink")]
        public string SplunkLink { get; set; }

        /// <summary>
        /// Gets or sets fromSourceSystem property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.fromSourceSystem")]
        public bool FromSourceSystem { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "roles")]
        public System.Collections.Generic.IList<RolesItem> Roles { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Roles != null)
            {
                foreach (var element in this.Roles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataCatalog.Rest.Models
{
    using System.Linq;

    /// <summary>
    /// Tagging a parameter with glossary terms, this is a feature only for
    /// standard SKU
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ParameterTermTag
    {
        /// <summary>
        /// Initializes a new instance of the ParameterTermTag class.
        /// </summary>
        public ParameterTermTag() { }

        /// <summary>
        /// Initializes a new instance of the ParameterTermTag class.
        /// </summary>
        /// <param name="parameterName">parameterName property</param>
        /// <param name="termId">termId property</param>
        /// <param name="fromSourceSystem">fromSourceSystem property</param>
        /// <param name="key">key property</param>
        public ParameterTermTag(string parameterName, string termId, bool fromSourceSystem, string key, System.Collections.Generic.IList<RolesItem> roles = default(System.Collections.Generic.IList<RolesItem>))
        {
            ParameterName = parameterName;
            TermId = termId;
            FromSourceSystem = fromSourceSystem;
            Key = key;
            Roles = roles;
        }

        /// <summary>
        /// Gets or sets parameterName property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.parameterName")]
        public string ParameterName { get; set; }

        /// <summary>
        /// Gets or sets termId property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.termId")]
        public string TermId { get; set; }

        /// <summary>
        /// Gets or sets fromSourceSystem property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.fromSourceSystem")]
        public bool FromSourceSystem { get; set; }

        /// <summary>
        /// Gets or sets key property
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.key")]
        public string Key { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "roles")]
        public System.Collections.Generic.IList<RolesItem> Roles { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ParameterName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ParameterName");
            }
            if (TermId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TermId");
            }
            if (Key == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Key");
            }
            if (this.Roles != null)
            {
                foreach (var element in this.Roles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}

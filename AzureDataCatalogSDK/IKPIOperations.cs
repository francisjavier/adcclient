// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataCatalog.Rest
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// KPIOperations operations.
    /// </summary>
    public partial interface IKPIOperations
    {
        /// <summary>
        /// Register KPI
        /// </summary>
        /// <param name='kpi'>
        /// Register KPI
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIRegisterHeaders>> RegisterWithHttpMessagesAsync(KPI kpi, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get KPI
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<KPIGet,KPIGetHeaders>> GetWithHttpMessagesAsync(string viewItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete KPI
        /// </summary>
        /// <param name='viewItemId'>
        /// View item id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteHeaders>> DeleteWithHttpMessagesAsync(string viewItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='description'>
        /// description payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIAddDescriptionHeaders>> AddDescriptionWithHttpMessagesAsync(string viewItemId, Description description, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='expert'>
        /// expert payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIAddExpertHeaders>> AddExpertWithHttpMessagesAsync(string viewItemId, Expert expert, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='accessInstruction'>
        /// accessinstruction payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIAddAccessInstructionHeaders>> AddAccessInstructionWithHttpMessagesAsync(string viewItemId, AccessInstruction accessInstruction, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='documentation'>
        /// documentation payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIAddDocumentationHeaders>> AddDocumentationWithHttpMessagesAsync(string viewItemId, Documentation documentation, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='friendlyName'>
        /// friendlyname payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIAddFriendlyNameHeaders>> AddFriendlyNameWithHttpMessagesAsync(string viewItemId, FriendlyName friendlyName, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='tag'>
        /// tag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIAddTagHeaders>> AddTagWithHttpMessagesAsync(string viewItemId, Tag tag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='termTag'>
        /// termtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIAddTermTagHeaders>> AddTermTagWithHttpMessagesAsync(string viewItemId, TermTag termTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='description'>
        /// description payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIUpdateDescriptionHeaders>> UpdateDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Description description, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DescriptionGet,KPIGetDescriptionHeaders>> GetDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteDescriptionHeaders>> DeleteDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='expert'>
        /// expert payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIUpdateExpertHeaders>> UpdateExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Expert expert, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ExpertGet,KPIGetExpertHeaders>> GetExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteExpertHeaders>> DeleteExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='accessInstruction'>
        /// accessinstruction payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIUpdateAccessInstructionHeaders>> UpdateAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, AccessInstruction accessInstruction, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<AccessInstructionGet,KPIGetAccessInstructionHeaders>> GetAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteAccessInstructionHeaders>> DeleteAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='documentation'>
        /// documentation payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIUpdateDocumentationHeaders>> UpdateDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Documentation documentation, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DocumentationGet,KPIGetDocumentationHeaders>> GetDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteDocumentationHeaders>> DeleteDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='friendlyName'>
        /// friendlyname payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIUpdateFriendlyNameHeaders>> UpdateFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, FriendlyName friendlyName, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<FriendlyNameGet,KPIGetFriendlyNameHeaders>> GetFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteFriendlyNameHeaders>> DeleteFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='tag'>
        /// tag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIUpdateTagHeaders>> UpdateTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Tag tag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<TagGet,KPIGetTagHeaders>> GetTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteTagHeaders>> DeleteTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='termTag'>
        /// termtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIUpdateTermTagHeaders>> UpdateTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, TermTag termTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<TermTagGet,KPIGetTermTagHeaders>> GetTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<KPIDeleteTermTagHeaders>> DeleteTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}

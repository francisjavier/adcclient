// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.DataCatalog.Rest
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// CommandOperations operations.
    /// </summary>
    public partial interface ICommandOperations
    {
        /// <summary>
        /// Register Command
        /// </summary>
        /// <param name='command'>
        /// Register Command
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandRegisterHeaders>> RegisterWithHttpMessagesAsync(Command command, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Command
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<CommandGet,CommandGetHeaders>> GetWithHttpMessagesAsync(string viewItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Command
        /// </summary>
        /// <param name='viewItemId'>
        /// View item id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteHeaders>> DeleteWithHttpMessagesAsync(string viewItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='description'>
        /// description payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddDescriptionHeaders>> AddDescriptionWithHttpMessagesAsync(string viewItemId, Description description, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='expert'>
        /// expert payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddExpertHeaders>> AddExpertWithHttpMessagesAsync(string viewItemId, Expert expert, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='accessInstruction'>
        /// accessinstruction payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddAccessInstructionHeaders>> AddAccessInstructionWithHttpMessagesAsync(string viewItemId, AccessInstruction accessInstruction, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='documentation'>
        /// documentation payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddDocumentationHeaders>> AddDocumentationWithHttpMessagesAsync(string viewItemId, Documentation documentation, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='friendlyName'>
        /// friendlyname payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddFriendlyNameHeaders>> AddFriendlyNameWithHttpMessagesAsync(string viewItemId, FriendlyName friendlyName, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='tag'>
        /// tag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddTagHeaders>> AddTagWithHttpMessagesAsync(string viewItemId, Tag tag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='termTag'>
        /// termtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddTermTagHeaders>> AddTermTagWithHttpMessagesAsync(string viewItemId, TermTag termTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='commandSchema'>
        /// commandschema payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddSchemaHeaders>> AddSchemaWithHttpMessagesAsync(string viewItemId, CommandSchema commandSchema, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='columnDescription'>
        /// columndescription payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddColumnDescriptionHeaders>> AddColumnDescriptionWithHttpMessagesAsync(string viewItemId, ColumnDescription columnDescription, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='columnTag'>
        /// columntag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddColumnTagHeaders>> AddColumnTagWithHttpMessagesAsync(string viewItemId, ColumnTag columnTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='columnTermTag'>
        /// columntermtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddColumnTermTagHeaders>> AddColumnTermTagWithHttpMessagesAsync(string viewItemId, ColumnTermTag columnTermTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ParameterDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='parameterDescription'>
        /// parameterdescription payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddParameterDescriptionHeaders>> AddParameterDescriptionWithHttpMessagesAsync(string viewItemId, ParameterDescription parameterDescription, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ParameterTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='parameterTag'>
        /// parametertag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddParameterTagHeaders>> AddParameterTagWithHttpMessagesAsync(string viewItemId, ParameterTag parameterTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add ParameterTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='parameterTermTag'>
        /// parametertermtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandAddParameterTermTagHeaders>> AddParameterTermTagWithHttpMessagesAsync(string viewItemId, ParameterTermTag parameterTermTag, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='description'>
        /// description payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateDescriptionHeaders>> UpdateDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Description description, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DescriptionGet,CommandGetDescriptionHeaders>> GetDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Description
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteDescriptionHeaders>> DeleteDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='expert'>
        /// expert payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateExpertHeaders>> UpdateExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Expert expert, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ExpertGet,CommandGetExpertHeaders>> GetExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Expert
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteExpertHeaders>> DeleteExpertWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='accessInstruction'>
        /// accessinstruction payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateAccessInstructionHeaders>> UpdateAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, AccessInstruction accessInstruction, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<AccessInstructionGet,CommandGetAccessInstructionHeaders>> GetAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete AccessInstruction
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteAccessInstructionHeaders>> DeleteAccessInstructionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='documentation'>
        /// documentation payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateDocumentationHeaders>> UpdateDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Documentation documentation, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DocumentationGet,CommandGetDocumentationHeaders>> GetDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Documentation
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteDocumentationHeaders>> DeleteDocumentationWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='friendlyName'>
        /// friendlyname payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateFriendlyNameHeaders>> UpdateFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, FriendlyName friendlyName, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<FriendlyNameGet,CommandGetFriendlyNameHeaders>> GetFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete FriendlyName
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteFriendlyNameHeaders>> DeleteFriendlyNameWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='tag'>
        /// tag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateTagHeaders>> UpdateTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Tag tag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<TagGet,CommandGetTagHeaders>> GetTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Tag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteTagHeaders>> DeleteTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='termTag'>
        /// termtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateTermTagHeaders>> UpdateTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, TermTag termTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<TermTagGet,CommandGetTermTagHeaders>> GetTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete TermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteTermTagHeaders>> DeleteTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='commandSchema'>
        /// commandschema payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateSchemaHeaders>> UpdateSchemaWithHttpMessagesAsync(string viewItemId, string annotationItemId, CommandSchema commandSchema, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<CommandSchemaGet,CommandGetSchemaHeaders>> GetSchemaWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete Schema
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteSchemaHeaders>> DeleteSchemaWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='columnDescription'>
        /// columndescription payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateColumnDescriptionHeaders>> UpdateColumnDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, ColumnDescription columnDescription, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ColumnDescriptionGet,CommandGetColumnDescriptionHeaders>> GetColumnDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ColumnDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteColumnDescriptionHeaders>> DeleteColumnDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='columnTag'>
        /// columntag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateColumnTagHeaders>> UpdateColumnTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, ColumnTag columnTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ColumnTagGet,CommandGetColumnTagHeaders>> GetColumnTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ColumnTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteColumnTagHeaders>> DeleteColumnTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='columnTermTag'>
        /// columntermtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateColumnTermTagHeaders>> UpdateColumnTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, ColumnTermTag columnTermTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ColumnTermTagGet,CommandGetColumnTermTagHeaders>> GetColumnTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ColumnTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteColumnTermTagHeaders>> DeleteColumnTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ParameterDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='parameterDescription'>
        /// parameterdescription payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateParameterDescriptionHeaders>> UpdateParameterDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, ParameterDescription parameterDescription, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ParameterDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ParameterDescriptionGet,CommandGetParameterDescriptionHeaders>> GetParameterDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ParameterDescription
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteParameterDescriptionHeaders>> DeleteParameterDescriptionWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ParameterTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='parameterTag'>
        /// parametertag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateParameterTagHeaders>> UpdateParameterTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, ParameterTag parameterTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ParameterTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ParameterTagGet,CommandGetParameterTagHeaders>> GetParameterTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ParameterTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteParameterTagHeaders>> DeleteParameterTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update ParameterTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='parameterTermTag'>
        /// parametertermtag payload
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandUpdateParameterTermTagHeaders>> UpdateParameterTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, ParameterTermTag parameterTermTag, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get ParameterTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ParameterTermTagGet,CommandGetParameterTermTagHeaders>> GetParameterTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete ParameterTermTag
        /// </summary>
        /// <param name='viewItemId'>
        /// View item Id
        /// </param>
        /// <param name='annotationItemId'>
        /// Annotation item Id
        /// </param>
        /// <param name='settings'>
        /// Additional parameters for the operation
        /// </param>
        /// <param name='xMsClientRequestId'>
        /// x-ms-client-request-id
        /// </param>
        /// <param name='ifMatch'>
        /// If-Match
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ErrorException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<CommandDeleteParameterTermTagHeaders>> DeleteParameterTermTagWithHttpMessagesAsync(string viewItemId, string annotationItemId, Settings settings, string xMsClientRequestId = default(string), string ifMatch = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
